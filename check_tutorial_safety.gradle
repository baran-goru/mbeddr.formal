import de.itemis.mps.gradle.*

//will pull the groovy classes/types from nexus to the classpath																
buildscript {
    repositories {
		maven { 
            url 'https://maven.pkg.github.com/mbeddr/*' 
            credentials {
                username = project.findProperty("github_username") ?: System.getenv("GITHUB_ACTOR")
                password = project.findProperty("github_token") ?: System.getenv("GITHUB_TOKEN")
            }    
        }
    }
    dependencies {
        classpath 'de.itemis.mps:mps-gradle-plugin:1.8.305.+'
    }
}

plugins {
    id 'base'
}

apply plugin: 'modelcheck'

dependencyLocking {
    lockAllConfigurations()
}

// Dependency versions
ext.mpsVersion =  '2021.1.+'
ext.mbeddrVersion =  '2021.1.+'

ext.dependencyRepositories = [
        'https://maven.pkg.github.com/mbeddr/*',
]

configurations {
    mps
}

dependencies {
    mps "com.jetbrains:mps:$mpsVersion"
}


repositories {
    for (repoUrl in project.dependencyRepositories) {
        maven {
            url repoUrl
            if (repoUrl.startsWith('https://maven.pkg.github.com/')) {
                credentials {
                    username project.findProperty("github_username") ?: System.getenv("GITHUB_ACTOR")
                    password project.findProperty("github_token") ?: System.getenv("GITHUB_TOKEN")
                }
            }
        }
    }
    mavenCentral()
}

File modelcheckresult = new File("$buildDir/TEST-tutorial-safety-modelcheckresult.xml")

def pluginsList=[]
new File("$buildDir/dependencies/com.mbeddr.platform").eachFile {
    if(it.isDirectory()) {
        pluginsList.add(new Plugin(it.getName(), it.absolutePath))
    }
} 
new File("$buildDir/artifacts/com.mbeddr.formal.languages").eachFile {
    if(it.isDirectory()) {
        pluginsList.add(new Plugin(it.getName(), it.absolutePath))
    }
} 

modelcheck {
	mpsLocation = new File("$buildDir/mps")
    macros = [new Macro("mbeddr.formal.home", "$projectDir")]
	plugins = pluginsList
    projectLocation = new File("$projectDir/code/tutorial-safety/")
    mpsConfig = configurations.mps
    junitFile = modelcheckresult
    errorNoFail = true
    debug = false
    maxHeap = "3G"
    modules = ["com.mbeddr.formal.safety.tutorial"] //, "com.mbeddr.formal.safety.users_guide"]
}

defaultTasks 'checkmodels'
